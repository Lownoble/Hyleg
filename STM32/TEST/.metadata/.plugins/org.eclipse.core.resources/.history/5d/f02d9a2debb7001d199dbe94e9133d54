#include "math.h"
#include "spi.h"
#include "imu.h"
LIS3MDL_S lis3mdl;
#define DS33_WHO_AM_I_ID     0x69
#define DS33_SA0_HIGH_ADDRESS 0x6b
#define DS33_SA0_LOW_ADDRESS  0x6a
// Reads the 3 mag channels and stores them in vector m
#define DS33_ADDRESS1  (DS33_SA0_HIGH_ADDRESS << 1)
#define DS33_ADDRESS2  (DS33_SA0_LOW_ADDRESS << 1)
#define DS33_IIC_ID DS33_ADDRESS1
#define ST_SENSORS_SPI_READ			0x80

xyz_s16_t data_acc;
xyz_s16_t data_g;


void Lis3mdl_SPI_WR(uint8_t add,uint8_t wrdata,uint8_t sel)
{
  SPI_CS(sel,0);
  Spi_RW(add);
  Spi_RW(wrdata);
  SPI_CS(sel,1);
}


void SPI_BufferRead(uint8_t*buf, uint8_t add, uint8_t len,uint8_t sel)
{
	uint8_t i=0;
	SPI_CS(sel,0);
	if(sel!=CS_LIS)
		Spi_RW(add|ST_SENSORS_SPI_READ);
	else
		Spi_RW(add|0xC0);
	for(i=0;i<len;i++)
	{
		*buf++ = Spi_RW(0xff);
	}
	SPI_CS(sel,1);
}


uint8_t id[3] ;
// Reads the 3 accelerometer channels and stores them in vector a

void LSM6_readAcc(uint8_t fast)
{
	uint8_t buffer[6];
	SPI_BufferRead(buffer, OUTX_L_XL, 6, MPU9250);

	data_acc.x = (buffer[1] << 8) | buffer[0];
	data_acc.y = (buffer[3] << 8) | buffer[2];
	data_acc.z = (buffer[5] << 8) | buffer[4];

	if(abs(data_acc.x)<6000&&abs(data_acc.y)<6000&&abs(data_acc.z)<6000)
	{
		lis3mdl.Acc_I16.x=data_acc.y;
		lis3mdl.Acc_I16.y=-data_acc.x;
		lis3mdl.Acc_I16.z=data_acc.z;
  }
}


// Reads the 3 gyro channels and stores them in vector g

void LSM6_readGyro(uint8_t fast)
{
	uint8_t buffer[6];
	SPI_BufferRead(buffer, OUTX_L_G, 6, MPU9250);

	data_g.x = (buffer[1] << 8) | buffer[0];
	data_g.y = (buffer[3] << 8) | buffer[2];
	data_g.z = (buffer[5] << 8) | buffer[4];
	if(abs(data_g.x)<6000&&abs(data_g.y)<6000&&abs(data_g.z)<6000)
	{
		lis3mdl.Gyro_I16.x=data_g.y;
		lis3mdl.Gyro_I16.y=-data_g.x;
		lis3mdl.Gyro_I16.z=data_g.z;
	}
}


void DS33_Init(void)
{
//---------------init acc & gro
		Lis3mdl_SPI_WR(0x21,0x04,MPU9250);HAL_Delay(10);
		Lis3mdl_SPI_WR(CTRL1_XL, 0x4f,MPU9250);HAL_Delay(10);
		Lis3mdl_SPI_WR(CTRL2_G, 0x4c,MPU9250);HAL_Delay(10);
		Lis3mdl_SPI_WR(CTRL3_C, 0x04,MPU9250);HAL_Delay(10);

		HAL_Delay(10);
		SPI_CS(MPU9250,0);
		Spi_RW(0x80|0x0f);
		uint8_t l_u8_ID1= Spi_RW(0xFF);
		SPI_CS(MPU9250,1);
		id[1] = l_u8_ID1;

		LSM6_readGyro(0);
}


